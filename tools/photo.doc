\inqmlmodule org.nemomobile.social 1
\brief A FacebookPhoto represents a Photo object from the Facebook OpenGraph API

Every FacebookPhoto has a unique identifier, and thus a photo may be
set as the \c node (or central content item) in the Facebook
adapter.  The content items related to a photo include various
likes and comments.

An example of usage of a FacebookPhoto as the node in a Facebook
model is as follows:

\qml
import QtQuick 1.1
import org.nemomobile.social 1.0

Item {
    id: root
    width: 400
    height: 800

    Flickable {
        anchors.top: parent.verticalCenter
        anchors.bottom: parent.bottom
        anchors.left: parent.left
        anchors.right: parent.right

        ListView {
            model: fb
            anchors.fill: parent
            delegate: Label { text: "id: " + contentItemIdentifier } // Comment ids
        }
    }

    Facebook {
        id: fb
        accessToken: "your access token"    // you must supply a valid access token
        nodeIdentifier: "10150146071966729" // some valid Facebook photo id.
        filters: [ ContentItemTypeFilter { type: Facebook.Comment } ]
    }

    Component.onCompleted: {
        fb.populate()
    }
}
\endqml

A FacebookPhoto may also be used "directly" by clients, in order to
upload comments, or like the photo.  An example of direct
usage of the FacebookPhoto type is as follows:

\qml
import QtQuick 1.1
import org.nemomobile.social 1.0

Item {
    id: root
    width: 400
    height: 800

    Facebook {
        id: fb
        accessToken: "your access token"    // you must supply a valid access token
    }

    FacebookPhoto {
        id: fbph
        socialNetwork: fb
        identifier: "10150146071966729"     // some valid Facebook Photo fbid

        onStatusChanged: {
            if (status == SocialNetwork.Idle) {
                // could comment on the photo
                fbph.uploadComment("I really like this photo!")
                // could like the photo
                fbph.like()
                // could unlike the photo
                fbph.unlike()
            }
        }
    }

    Image {
        anchors.fill: parent
        source: fbph.source
    }
}
\endqml 
